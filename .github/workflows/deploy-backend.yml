name: Deploy Backend

on:
  push:
    branches: [main]
  repository_dispatch:
    types: [deploy]

env:
  AZURE_WEBAPP_NAME: "app-${{ vars.PROJECT_NAME }}-dev"
  AZURE_WEBAPP_PACKAGE_PATH: "."
  NODE_VERSION: "22.19.0"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # ✨ Ajout de l'étape build (même si c'est juste un echo)
      - name: Build application
        run: npm run build

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Set App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "API_VERSION", 
                "value": "${{ github.sha }}"
              },
              {
                "name": "PORT",
                "value": "8000"
              }
            ]

      - name: Restart App Service
        run: |
          az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group rg-${{ vars.PROJECT_NAME }}-dev

  health-check:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success() # ✨ Seulement si le déploiement réussit

    steps:
      - name: Health Check
        run: |
          echo "Waiting for app to start..."
          sleep 30

          # ✨ Health check avec retry
          for i in {1..5}; do
            if curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health; then
              echo "✅ Health check passed!"
              exit 0
            elif curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/; then
              echo "✅ App is running (no /health endpoint)!"
              exit 0
            else
              echo "❌ Attempt $i failed, retrying in 10s..."
              sleep 10
            fi
          done
          echo "❌ Health check failed after 5 attempts"
          exit 1
