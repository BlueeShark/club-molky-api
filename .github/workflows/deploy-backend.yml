name: Deploy Backend

on:
  push:
    branches: [main]
  repository_dispatch:
    types: [deploy]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: "app-club-molky-prod-backend"
  NODE_VERSION: "20.x"
  RESOURCE_GROUP: "rg-club-molky-prod"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application (if needed)
        run: |
          if [ -f "package.json" ] && grep -q '"build"' package.json; then
            npm run build
          else
            echo "No build script found, skipping build step"
          fi

      - name: Create deployment package
        run: |
          # Créer le ZIP en excluant les fichiers inutiles
          zip -r deployment.zip . \
            -x "*.git*" \
            -x ".github/*" \
            -x "README.md" \
            -x "*.log" \
            -x ".env*" \
            -x "coverage/*" \
            -x "test/*" \
            -x "tests/*"
          
          # Vérifier que le ZIP a été créé
          ls -la deployment.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        run: |
          az webapp deploy \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --src-path deployment.zip \
            --type zip \
            --async false

      - name: Set App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "API_VERSION",
                "value": "${{ github.sha }}"
              },
              {
                "name": "PORT",
                "value": "8000"
              }
            ]

      - name: Restart App Service
        run: |
          az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
